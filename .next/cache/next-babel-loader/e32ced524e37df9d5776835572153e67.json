{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnmejiahernandez/Documents/simetrik/components/Search/index.jsx\";\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\nimport React, { useState } from 'react'; // Components\n\nimport Input from '../UI/Input'; // CSS\n\nimport styles from './Search.module.scss';\n\nconst Search = props => {\n  const {\n    0: searchFocus,\n    1: setSearchFocus\n  } = useState(false);\n\n  const searchFocused = () => {\n    let isFocus = !searchFocus;\n    setSearchFocus(isFocus);\n  };\n\n  let backdropClasses = [styles['search-backdrop']];\n  let searchResultClasses = [styles['search-result']];\n\n  if (searchFocus) {\n    backdropClasses.push(styles.animated);\n    searchResultClasses.push(styles.animated);\n  }\n\n  let searchedResult = null;\n\n  if (props.searchResult.length) {\n    props.searchResult.forEach(resultType => {\n      console.log('type', resultType);\n\n      if (resultType.type !== 'usuarios') {\n        searchedResult = resultType.data.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.description\n          }, data._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 28\n          }, this);\n        }); // debugger\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: backdropClasses.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles['search-title'],\n        children: \"Simetrik Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: props.search,\n        onChange: props.handlerSearch,\n        onFocus: searchFocused,\n        onBlur: searchFocused,\n        placeholder: \"Search Data\",\n        hasanimation: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: searchResultClasses.join(' '),\n        children: searchFocus && searchedResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['search-blur'],\n      children: !searchFocus && searchedResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/johnmejiahernandez/Documents/simetrik/components/Search/index.jsx"],"names":["loadGetInitialProps","React","useState","Input","styles","Search","props","searchFocus","setSearchFocus","searchFocused","isFocus","backdropClasses","searchResultClasses","push","animated","searchedResult","searchResult","length","forEach","resultType","console","log","type","data","map","i","description","_id","search","join","handlerSearch"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,iCAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMO,aAAa,GAAG,MAAM;AACxB,QAAIC,OAAO,GAAG,CAACH,WAAf;AACAC,IAAAA,cAAc,CAACE,OAAD,CAAd;AACH,GAHD;;AAKA,MAAIC,eAAe,GAAG,CAACP,MAAM,CAAC,iBAAD,CAAP,CAAtB;AACA,MAAIQ,mBAAmB,GAAG,CAACR,MAAM,CAAC,eAAD,CAAP,CAA1B;;AACA,MAAIG,WAAJ,EAAiB;AACbI,IAAAA,eAAe,CAACE,IAAhB,CAAqBT,MAAM,CAACU,QAA5B;AACAF,IAAAA,mBAAmB,CAACC,IAApB,CAAyBT,MAAM,CAACU,QAAhC;AACH;;AAED,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAIT,KAAK,CAACU,YAAN,CAAmBC,MAAvB,EAA+B;AAC3BX,IAAAA,KAAK,CAACU,YAAN,CAAmBE,OAAnB,CAA4BC,UAAD,IAAgB;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,UAApB;;AACA,UAAIA,UAAU,CAACG,IAAX,KAAoB,UAAxB,EAAoC;AAChCP,QAAAA,cAAc,GAAGI,UAAU,CAACI,IAAX,CAAgBC,GAAhB,CAAoB,CAACD,IAAD,EAAOE,CAAP,KAAa;AAC9C,8BAAO;AAAA,sBAAmBF,IAAI,CAACG;AAAxB,aAAQH,IAAI,CAACI,GAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFgB,CAAjB,CADgC,CAIhC;AACH;AACJ,KARD;AASH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,MAAvB;AAAA,8BACI;AACI,QAAA,SAAS,EAAEjB,eAAe,CAACkB,IAAhB,CAAqB,GAArB;AADf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAI,QAAA,SAAS,EAAEzB,MAAM,CAAC,cAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEE,KAAK,CAACsB,MAFjB;AAGI,QAAA,QAAQ,EAAEtB,KAAK,CAACwB,aAHpB;AAII,QAAA,OAAO,EAAErB,aAJb;AAKI,QAAA,MAAM,EAAEA,aALZ;AAMI,QAAA,WAAW,EAAC,aANhB;AAOI,QAAA,YAAY,EAAC;AAPjB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAeI;AAAK,QAAA,SAAS,EAAEG,mBAAmB,CAACiB,IAApB,CAAyB,GAAzB,CAAhB;AAAA,kBACKtB,WAAW,IAAIQ;AADpB;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI;AAAK,MAAA,SAAS,EAAEX,MAAM,CAAC,aAAD,CAAtB;AAAA,gBACK,CAACG,WAAD,IAAgBQ;AADrB;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA,kBADJ;AA0BH,CAvDD;;AAyDA,eAAeV,MAAf","sourcesContent":["import { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\nimport React, { useState } from 'react';\n\n// Components\nimport Input from '../UI/Input';\n\n// CSS\nimport styles from './Search.module.scss';\n\nconst Search = (props) => {\n    const [searchFocus, setSearchFocus] = useState(false);\n\n    const searchFocused = () => {\n        let isFocus = !searchFocus;\n        setSearchFocus(isFocus);\n    };\n\n    let backdropClasses = [styles['search-backdrop']];\n    let searchResultClasses = [styles['search-result']];\n    if (searchFocus) {\n        backdropClasses.push(styles.animated);\n        searchResultClasses.push(styles.animated);\n    }\n\n    let searchedResult = null;\n\n    if (props.searchResult.length) {\n        props.searchResult.forEach((resultType) => {\n            console.log('type', resultType)\n            if (resultType.type !== 'usuarios') {\n                searchedResult = resultType.data.map((data, i) => {\n                    return <p key={data._id}>{data.description}</p>\n                });\n                // debugger\n            }\n        });\n    }\n\n    return (\n        <>\n            <div className={styles.search}>\n                <div\n                    className={backdropClasses.join(' ')}>\n                </div>\n                <h1 className={styles['search-title']}>\n                    Simetrik Search\n                </h1>\n                <Input\n                    type=\"text\"\n                    value={props.search}\n                    onChange={props.handlerSearch}\n                    onFocus={searchFocused}\n                    onBlur={searchFocused}\n                    placeholder=\"Search Data\"\n                    hasanimation=\"true\" />\n                <div className={searchResultClasses.join(' ')}>\n                    {searchFocus && searchedResult}\n                </div>\n            </div>\n            <div className={styles['search-blur']}>\n                {!searchFocus && searchedResult}\n            </div>\n        </>\n    )\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}